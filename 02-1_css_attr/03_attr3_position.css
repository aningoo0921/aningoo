body {
    margin: 0;
    padding: 0;

    background: linear-gradient(white, orange
    );
    height: 2000px;

}

div {
    width: 100px;
    height: 100px;
    font-weight: 700px;
    text-align: center;
    line-height: 100px;
}
.position-static {
    /* position: static;* (default)기본 값이기 때문에 작성하지 않아도 됨. 주석처리를 하던 안한던 결과가 동일 
    -inline 요소라면 왼쪽에서 오른쪽으로 쌓임 */
    background-color: pink;
    /* top: 100px; */
}
/* position: relative; -> 상대 위치 */
/* 일반적인 흐림에 따라 배치되먄 top left bottom 속성을 사용해 위치 지정
- 자신이 원래 있어야 하는 위치 기준
- top: 위에서 부터의 여백
- bottom: 아래서부터의 여백
- right: 오른쪽으로부터의 여백
- left: 왽쪽으로부터의 여백*/
/* 자기의 자리를 벗어나도 */
.position-relative {
    background-color: lightblue;
    position: relative;
    /* left: 100px; */
    /* top: 50px; */
    bottom: 30px;
    right: 15px;
}
/* position: absolute; -> 절대 위치 */
/*
-기준점
    -position:static 이 아닌 값을 가지는 제일 가까운 조강 기준
    -만약 static 아닌 값을 가진 조상이 없다면 뷰포트 기준
    - 특정 요소를 기준 삼아 top,bottom,right, left 속성을 지정함 
    */
.position-absolute {
    background-color: gold;
    position: absolute;
    top: 0;
}
 .position-fixed {
    background-color: coral;
    position: fixed;
    right: 30px;
    bottom: 30px;
 }
 /* posiotion: sticky; -> top 속성의 위치에 도달했을  때부터 해당 */
 .position-sticky {
    position: sticky;
    top: 0; /* viewport의 최상단에 도달했을 때 고정 */
    background-color: palegreen;
 }
.sticky-container {
    height: 1200px;
    background: linear-gradient(lightblue,);
}
